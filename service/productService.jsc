const product_m = require("../model/productModel.jsc");
const pool = require("../config/db.jsc");

exports.insertProducts = async(req, res) => {
    let data = {
        id: req.body.id,
        title: req.body.title,
        price: req.body.price,
        description: req.body.desc,
        featured: req.body.featured,
        img: req.body.image,
        category_id: req.body.category,
    };
    let insert = product_m.InsertProducts(data);

    insert.catch(function(err) {
        res.json({
            status: 500,
            success: false,
            message: err,
        });
    });
    res.json({
        status: 200,
        success: true,
    });
};

exports.getProducts = async(req, res) => {
    let getProducts = product_m.GetProducts();
    getProducts
        .then(function(result) {
            res.json({
                status: 200,
                success: true,
                return: result,
            });
        })
        .catch(function(err) {
            console.log(err);
            res.json({
                status: 500,
                success: false,
            });
        });
};

exports.filteredProduct = async(req, res) => {
    let getProducts = product_m.FilteredProducts(req.query.search);
    getProducts
        .then(function(result) {
            res.json({
                status: 200,
                success: true,
                return: result,
            });
        })
        .catch(function(err) {
            console.log(err);
            res.json({
                status: 500,
                success: false,
            });
        });
};

exports.filteredProductByCategory = async(req, res) => {
    let getProducts = product_m.FilteredProductsByCategory(req.query.search);
    getProducts
        .then(function(result) {
            res.json({
                status: 200,
                success: true,
                return: result,
            });
        })
        .catch(function(err) {
            console.log(err);
            res.json({
                status: 500,
                success: false,
            });
        });
};

exports.cartProducts = async(req, res) => {
    let getProducts = product_m.GetCartProducts(req.body.product_ids);
    console.log(req.body.product_ids);
    getProducts
        .then(function(result) {
            res.json({
                status: 200,
                success: true,
                return: result,
            });
        })
        .catch(function(err) {
            console.log(err);
            res.json({
                status: 500,
                success: false,
            });
        });
};

exports.invoice = async(req, res) => {
    let userData = {
        user_id: req.body.user_id,
        message_to_seller: req.body.message,
        status_payment: 0,
    };
    let id = 0;

    pool.getConnection(function(err, connection) {
        connection.beginTransaction(function(err) {
            if (err) throw err;

            connection.query(
                `INSERT INTO invoice_header set ?`, [userData],
                (err, result) => {
                    console.log(result);
                    if (err) {
                        connection.rollback(function() {
                            if (err) {
                                console.log(err);
                                res.json({
                                    status: 500,
                                    success: false,
                                    msg: err,
                                });
                            }
                        });
                    }
                    id = result.insertId;
                    let getProducts = product_m.GetCartProducts(req.body.product_ids);

                    getProducts
                        .then(function(result) {
                            for (var i = 0; i < result.length; i++) {
                                let data = {
                                    invoice_header_id: id,
                                    product_name: result[i].title,
                                    product_price: result[i].price,
                                    product_qty: req.body.qty[i].qty,
                                };
                                connection.query(
                                    `INSERT INTO invoice_detail set ?`, [data],
                                    (err, result) => {
                                        if (err) {
                                            connection.rollback(function(reject) {
                                                if (err) {
                                                    res.json({
                                                        status: 500,
                                                        success: false,
                                                        msg: err,
                                                    });
                                                }
                                            });
                                        }

                                        connection.commit(function(err) {
                                            if (err) {
                                                connection.rollback(function(reject) {
                                                    if (err) console.log(err);
                                                });
                                            } else {
                                                res.json({
                                                    status: 200,
                                                    success: true,
                                                    //   msg: err,
                                                });
                                            }
                                        });
                                    }
                                );
                            }
                        })
                        .catch(function(err) {
                            console.log(err);
                            res.json({
                                status: 500,
                                success: false,
                                msg: err,
                            });
                        });
                }
            );
        });
    });
};